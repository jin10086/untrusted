// 由于 rotjs 库的原因，括号使用英文半角，
// 可以获得更好的显示效果。
var _i18nDisplay = {
	// display.js
	"%c{#0f0}> initialize"	:	{'x' : 0, 'y' : -2, 'txt' : "%c{#0f0}> 初始化"},
	"U N T R U S T E D"		:	{'x' : 21, 'y' : 3, 'txt' : "一意孤行"},
	"- or - "	:	{'x' : 23, 'y' : 5, 'txt' : "- 或 - "},
	"THE CONTINUING ADVENTURES OF DR. EVAL"	:	{'x' : 19,'y' : 7, 'txt' : "Dr.Eval 大冒险"},
	"a game by Alex Nisnevich and Greg Shuflin"	:	{'x' : 9, 'y' : 12, 'txt' : "Alex Nisnevich 和 Greg Shuflin 开发\n\n　　　　　　　　　mikespook 汉化"},
	"Press any key to begin ..."	:	{'x' : 28, 'y' : 22, 'txt':"按任意键开始游戏 ..."},
}
var _i18n = {
	// display.js	
	"%c{#0f0}> run "	:	"%c{#0f0}> 运行 ",
	// inventory.js
	'INVENTORY: '	:	'背包：',
	// sound.js
	'Now playing: "':	'正在播放："',
	'The Green'		:	'绿之韵',
	'Adversity'		:	'厄运',
    'Beach Wedding Dance'	:	'沙滩婚礼舞',
	'Boss Loop 1'	:	'大王寻山 1',
    'Brazilicon Alley'		:	'布里斯林科小路',
    'Da Funk Do You Know \'bout Chip?'	:	'芯之畏惧',
    'cloudy sin'	:	'罪恶密布',
    'Come and Find Me'	:	'来找我',
    'coming soon'	:	'将至',
    'Comme Des Orages'	:	'风暴',
    'Conspiracy'	:	'阴谋',
    'Death Destroyer (Radio Edit)'	:	'死神（音乐版）',
    'Dynamic Punctuality'	:	'动态规则',
    'Dmitry\'s Thing #2'	:	'德米特里小事 #2',
    'Messeah'	:	'混乱',
    'Night Owl'	:	'猫头鹰',
    'Obscure Terrain'	:	'朦胧领域',
    'Searching'	:	'寻觅',
    'Slimeball Vomit'	:	'作呕',
    'Soixante-8'	:	'六十8',
    'Tart (Pts 1-2)'	:	'午夜酸果',
    'The Waves Call Her Name'	:	'永恒的呼唤',
	// _tail.js
	'%cIf you can read this, you are cheating! D:'	:	'"%c如果你看到这些文字，说明你在作弊！:D"',
	'%cBut really, you don\'t need this console to play the game. Walk around using arrow keys (or Vim keys), and pick up the computer ('	:	'%c说真的，你没必要用控制台来玩这个游戏。用方向键(或 Vim 快捷键)移动，捡起电脑(',
	'). Then the fun begins!'	:	')。来找点乐子吧！',
	// objects.js
	'a hidden mine'	:	'隐藏的地雷(mine)',
	'a trap'	:	'陷阱(trap)',
	'You have picked up the computer!'	:	'你捡起了一台电脑(computer)！',
	'You have picked up the function phone!' :	'你捡起了一部电话(phone)！',
	'You have picked up a red key!'	:	'你捡起了红色钥匙(redKey)！',
	'You have picked up a green key!'	:	'你捡起了绿色钥匙(greenKey)！',
	'You have picked up a blue key!'	:	'你捡起了蓝色钥匙(blueKey)！',
	'You have picked up a yellow key!'	:	'你捡起了黄色钥匙(yellowKey)！',
	'You have picked up the Algorithm!'	:	'你得到了算法(theAlgorithm)！',
	'You have lost the Algorithm!'	:	'你失去了算法(theAlgorithm)！',
	// reference.js
	'Begins drawing a new shape.'	:	'绘制一个新的图形。',
	'Sets the end coordinates of a line.'	:	'设定线段的终点坐标。',
	'Determines the width of the next lines drawn.'	:	'设定之后绘制的线段的宽度。',
	'Sets the start coordinates of a line.'	:	'设定线段的起始坐标。',
	'Draws a line whose coordinates have been defined by <b>lineTo</b> and <b>moveTo</b>.'	:	'绘制一条由 <b>lineTo</b> 和 <b>moveTo</b> 定义坐标的线段。',
	'Determines the color (and, optionally, other properties) of the next lines drawn.'	:	'设定之后绘制的线段的颜色(以及其他属性作为可选项)。',
	'When passed an HTML string, $ returns a corresponding <a onclick="$(\'#helpPaneSidebar .category#jQuery\').click();">jQuery</a> instance.'	:	'当传入一段 HTML 字符串时，$ 返回对应的 <a onclick="$(\'#helpPaneSidebar .category#jQuery\').click();">jQuery</a> 实例。',
	'The player exits the level as soon as this method returns true.'	:	'一旦这个方法返回 true，玩家就立刻退出当前关卡。',
	'The player can exit the level only if this method returns true.'	:	'只有当这个方法返回 true，玩家才能退出当前关卡。',
	'This method is called when the level loads.'	:	'在当前关卡加载时，这个方法会被调用。',
	'The level can be loaded only if this method returns true.'	:	'只有这个方法返回 true 时，当前关卡才能被加载。',
	'Instantiates a Maze object of given width and height. The Maze object can create a maze by calling maze.create(callback), where the callback is a function that accepts (x, y, mapValue) and performs some action for each point in a grid, where mapValue is a boolean that is true if and only if the given point is part of the maze.'	:	'用给定的宽度和高度初始化一个迷宫对象。这个迷宫对象可以通过调用 maze.create(callback) 来创建迷宫。这里的 callback 是一个接受 (x, y, mapValue) 作为参数的函数，并且可以对方格中的每个点进行操作。mapValue 是布尔值，当给定的点是迷宫中可以通行的路径是为 true。',
	'Adds the given CSS class to the DOM element(s) specified by the jQuery object.'	:	'为某个 jQuery 对象化的 DOM 元素添加 CSS class。',
	'Returns the children of the DOM element specified by the jQuery object, as a jQuery array.'	:	'返回某个 jQuery 对象化的 DOM 元素的子对象，并保存在 jQuery 数组中。',
	'Returns all elements in the DOM tree specified by the jQuery object that match the given CSS selector, as a jQuery array.'	:	'返回所有匹配给定的 CSS 选择器的 jQuery 对象化的 DOM 元素，并保存在 jQuery 数组中。',
	'Returns the first element of a jQuery array.'	:	'返回 jQuery 数组的第一个元素。',
	'Returns true if and only if the DOM element specified by the jQuery object has the given CSS class.'	:	'当且仅当某个 jQuery 对象化的 DOM 元素拥有指定的 CSS class 时，返回 true。',
	'Returns the number of elements in a jQuery array.'	:	'返回 jQuery 数组的元素个数。',
	'Returns the next sibling of the DOM element specified by the jQuery object.'	:	'返回某个 jQuery 对象化的 DOM 元素的下一个元素。',
	'Returns the parent of the DOM element specified by the jQuery object.'	:	'返回某个 jQuery 对象化的 DOM 元素的父元素。',
	'Returns the previous sibling of the DOM element specified by the jQuery object.'	:	'返回某个jQuery 对象化的 DOM 元素的前一个元素。',
	'Removes the given CSS class from the DOM element(s) specified by the jQuery object.'	:	'移除某个 jQuery 对象化的 DOM 元素指定的 CSS class。',
	'Returns the number of objects of the given type on the map.'	:	'返回地图上指定类型的对象的个数。',
	'Creates the map from a <a onclick="$(\'#helpPaneSidebar .category#jQuery\').click();">jQuery</a> instance, rendering the map as a DOM (document object model) rather than a grid.'	:	'从一个 <a onclick="$(\'#helpPaneSidebar .category#jQuery\').click();">jQuery</a> 实例中创建地图，用 DOM (document object model) 而不是表格来渲染地图。',
	'Places objects on the map corresponding to their position on the grid (an array of strings), with mappings as defined in tiles (a dictionary of character -> object type mappings), at the given offset from the top-left corner of the map.'	:	'基于对象在网格中的位置(一个字符串数组)在地图上放置它们。同时，用给定的从地图左上角计算的偏移量映射到分片(角色的方向 -> 对象的类型)。',
	'Places a line on the map between the given points, that triggers the given callback when the player touches it. (Note that the line is invisible: createLine does <i>not</i> draw anything to the <a onclick="$(\'#helpPaneSidebar .category#canvas\').click();">canvas</a>.)'	:	'在地图上给定的点之间放置一条线段，当玩家触碰到这条线的时候，触发指定的回调。(注意这条线是不可见的：createLine <i>不会</i>在 <a onclick="$(\'#helpPaneSidebar .category#canvas\').click();">canvas</a> 上绘制任何东西。',
	'Displays the given chapter name.'	:	'显示指定章节的名字。',
	'Defines a new type of <a onclick="$(\'#helpPaneSidebar .category#object\').click();">object</a> with the given properties. Note that type definitions created with map.defineObject only persist in the scope of the level.'	:	'用指定的属性来定义一个新的 <a onclick="$(\'#helpPaneSidebar .category#object\').click();">object</a> 类型。注意使用 map.defineObject 进行的任何定义，对象的作用域只在当前关卡有效。',
	'Returns the empty cells adjacent to the cell at the given coordinates (if any), as an array of items of the form <i>[[x, y], direction]</i>, where (x, y) are the coordinates of each empty cell, and <i>direction</i> is the direction from the given cell to each empty cell ("left", "right", "up", or "down").'	:	'返回指定坐标的相邻的空单元，用 <i>[[x, y], direction]</i> 的格式作为数组的元素，返回数组。(x, y) 表示空单元的坐标，而 <i>direction</i> 是空单元相对指定单元的方向(“left”、“right”、“up” 或 “down”)。',
	'Returns the 2D drawing context of the <a onclick="$(\'#helpPaneSidebar .category#canvas\').click();">canvas</a> overlaying the map.'	:	'返回放置有地图的 <a onclick="$(\'#helpPaneSidebar .category#canvas\').click();">canvas</a> 的 2D 上下文。',
	'Returns {"x": x, "y": y}, where x and y are the respective coordinates of the given object on the canvas returned by map.getCanvasContext().'	:	'返回 {"x": x, "y": y}，而 x 和 y 分别是由 map.getCanvasContext() 返回的指定对象的横纵坐标。',
	'Returns the <a onclick="$(\'#helpPaneSidebar .category#jQuery\').click();">jQuery</a> instance representing the map.'	:	'返回表示地图的 <a onclick="$(\'#helpPaneSidebar .category#jQuery\').click();">jQuery</a> 实例。',
	'Returns all dynamic objects currently on the map.'	:	'返回当前地图上所有的动态对象。',
	'Returns the height of the map, in cells.'	:	'以单元格为单位，返回地图的高。',
	'Returns the type of the object at the given coordinates (or "empty" if there is no object there).'	:	'返回指定坐标上对象的类型(如果没有对象，返回“empty”)。',
	'Returns the Player object.'	:	'返回玩家对象',
	'Returns a hexadecimal string representing a random color in between the start and end colors. The start and end colors must be arrays of the form [R, G, B], where R, G, and B are decimal integers.'	:	'返回一个十六进制字符串表示在 start 到 end 之间的随机颜色。start 和 end 颜色必须是按照 [R, G, B] 格式的数组，R、G 和 B 是十进制整数。',
	'Returns the width of the map, in cells.'	:	'以单元格为单位，返回地图的宽。',
	'Returns true if called while a level is starting.'	:	'如果调用的时候关卡已经开始，返回 true。',
	'Overrides the action performed by pressing the given key (<i>left</i>, <i>right</i>, <i>up</i>, or <i>down</i>).'	:	'改写给定的按键的功能(<i>left</i>, <i>right</i>, <i>up</i>, or <i>down</i>)。',
	'Places an object of the given type at the given coordinates.'	:	'在指定的坐标放置特定类型的对象。',
	'Places the player at the given coordinates.'	:	'将玩家放置在指定坐标。',
	'Sets the background color of the given square.'	:	'设置指定格子的背景颜色。',
	'Sets the background color of the given square.'	:	'设置指定格子的背景颜色。',
	'Starts a timer (c.f. setInterval) of the given delay, in milliseconds (minimum 25 ms).'	:	'用指定延迟启动一个定时器(也就是 setInterval)，以毫秒为单位(最小 25 毫秒)。',
	'Updates the <a onclick="$(\'#helpPaneSidebar .category#jQuery\').click();">jQuery</a> instance representing the map.'	:	'更新代表地图的 <a onclick="$(\'#helpPaneSidebar .category#jQuery\').click();">jQuery</a> 实例。',
	'Raises an exception if there are not at least num lines (created by map.createLine) on the map.'	:	'如果地图上(由 map.createLine 创建的)线段的数量未达到 num，产生一个异常。',
	'Raises an exception if there are not at least num objects of type objectType on the map.'	:	'如果地图 objectType 类型对象的数量未达到 num ，产生一个异常。',
	'Raises an exception if there are more than num dynamic objects on the map.'	:	'如果地图上动态对象的数量未达到 num，产生一个异常。',
	'Raises an exception if there are not exactly num objects of type objectType on the map.'	:	'如果地图上 objectType 类型对象的数量不是 num，产生一个异常。',
	'Raises an exception if there are any timers currently set with map.startTimer.'	:	'如果当前有任何由 map.startTimer 创建的定时器，产生一个异常。',
	'Displays a message at the bottom of the map.'	:	'在地图的下方显示消息。',
	'(For dynamic objects only.) Returns true if (and only if) the object is able to move one square in the given direction, which can be "left", "right", "up", or "down".'	:	'(仅用于动态对象。)当且仅当对象可以移动到指定方向上的方格时返回 true。方向可以是“left”、“right”、“up” 或 “down”。',
	'The color of the object\'s symbol on the map.'	:	'地图上代表对象的颜色。',
	'(For dynamic objects only.) Returns the x and y coordinates of the nearest object of the given type to this object, as a hash.'	:	'(仅用于动态对象。)返回距离当前对象最近的、指定类型的对象的 x 和 y 坐标。',
	'(For dynamic objects only.) Returns the x-coordinate of the object.'	:	'(仅用于动态对象。)返回对象的 x 坐标。',
	'(For dynamic objects only.) Returns the y-coordinate of the object.'	:	'(仅用于动态对象。)返回对象的 y 坐标。',
	'(For dynamic objects only.) Gives the given item to the target (generally, the player). Can only be done if the object and the player have just collided.'	:	'(仅用于动态对象。)向指定目标(通常是玩家)提供特定的物品。仅在物品和玩家发生碰撞时有效。',
	'(For non-dynamic objects only.) The function that determines whether or not the player can pass through this object.'	:	'(仅用于非动态对象。)用于判断玩家是否可以穿过该对象的函数。',
	'(For dynamic objects only.) Moves the object one square in the given direction, which can be "left", "right", "up", or "down". An object can only move once per turn.'	:	'(仅用于动态对象。)将对象向指定方向移动一格。方向可以是“left”、“right”、“up” 或 “down”。每个周期对象都只能移动一格。',
	'The function that is executed when this object touches the player.'	:	'当对象触碰到玩家时，该函数被执行。',
	'(For dynamic objects only.) The function that is executed when this object is destroyed.'	:	'(仅用于动态对象。)当对象被销毁时，该函数被执行。',
	'(For dynamic objects only.) If true, this object destroys any dynamic object (or player) that it collides with, and is itself destroyed when it collides with anything.'	:	'(仅用于动态对象。)如果为 true，这个对象会摧毁它所碰到的任何动态对象(或玩家)，如果碰到任何东西，它本身也会被摧毁。',
	'(For dynamic objects only.) If true, this object can be pushed by the player.'	:	'(仅用于动态对象。)如果为 true，这个对象可以被玩家推动。',
	'The object\'s symbol on the map.'	:	'地图上代表对象的符号。',
	'(For teleporters only.) Sets the destination of this teleporter.'	:	'(仅用于传送点)设定该传送点的目的地。',
	'Can be "item", "dynamic", or none. If "dynamic", then this object can move on turns that run each time that the player moves. If "item", then this object can be picked up.'	:	'可以是“item”、“dynamic” 或 none。如果是 “dynamic” 这个对象在玩家每次移动的时候都可以移动。如果是 “item”，那么可以捡起这个对象。',
	'Returns true if and only if the player is at the given location.'	:	'当且仅当玩家在指定的位置上时，返回 true。',
	'Returns the color of the player.'	:	'返回玩家的颜色。',
	'Returns the direction of last move by the player.'	:	'返回玩家最后移动的方向。',
	'Returns the x-coordinate of the player.'	:	'返回玩家的 x 坐标。',
	'Returns the y-coordinate of the player.'	:	'返回玩家的 y 坐标。',
	'Returns true if and only if the player has the given item.'	:	'当且仅当玩家拥有指定的物品时，返回 true。',
	'Kills the player and displays the given text as the cause of death.'	:	'杀死玩家，并展示指定的文字来说明死因。',
	'Moves the player one square in the given direction. The player can only move once in a given function.'	:	'向指定方向将玩家移动一格。在指定函数中，玩家只能被移动一次。',
	'Removes the given item from the player\'s inventory, if the player has the given item.'	:	'如果玩家有指定的物品的话，从背包中移除它。',
	'Sets the color of the player.'	:	'设置玩家的颜色。',
	'Sets the function that is executed when the player uses the function phone.'	:	'设置玩家使用电话功能时，将执行的函数。',
	// map.js
	'Forbidden method call: '	:	'禁止的方法调用：',
	"There is no type of object named "	:	'没有物品叫做',
	"!"	:	'！',
    "Can't place object on top of player!"	:	'不能将物品放在玩家上！',
	"There is already an object at"	:	'已经有物品位于坐标',
	"Can't place player twice!"	:	'玩家不能被放置两次！',
	"There is already a type of object named "	:	'已经有物品类型叫做',
	"defineObject(): minimum interval is 100 milliseconds"	:	'"defineObject()：最小间隔为 100 毫秒',
	"delay not specified"	:	'未指定延迟',
	"minimum delay is 25 milliseconds"	:	'最小延迟为 25 毫秒',
	'Not enough '	:	'不足数量的',
	's on the map! Expected: '	:	'在地图上！应当有：',
	', found: '	:	'，现有：', 
	'Too many '	:	'太多的',
	'Wrong number of '	:	'错误数量的',
	'Too many timers set on the map! Expected: 0, found: '	:	'在地图上有太多定时器！应当有：0，现有：',
	'Not enough lines on the map! Expected: '	:	'在地图上的线条数量不足！应当有：',
	//
	'':''
}

function _(txt) {
	return _i18n[txt] == undefined ? txt : _i18n[txt];
}

function _d(txt) {
	return _i18nDisplay[txt] == undefined ? {'x' : 0, 'y' : 0, 'txt' : txt} : _i18nDisplay[txt];
}
