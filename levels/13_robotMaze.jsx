#BEGIN_PROPERTIES#
{
    "version": "1.2",
    "commandsIntroduced": ["map.getAdjacentEmptyCells"],
    "music": "Searching"
}
#END_PROPERTIES#
/*
 * robotMaze.js
 *
 * 蓝色钥匙被藏在了迷宫里，这当然不是那么容易了。
 *
 * 新亏你是个工智能的专家，相信我们不会空手而归。
 */

function startLevel(map) {
#START_OF_START_LEVEL#
    // 提示：你可以按 R 或 5 来重置，并且玩家不要与机器人同时同方向移动。

    map.getRandomInt = function(min, max) {
        return Math.floor(Math.random() * (max - min + 1)) + min;
    }

    map.placePlayer(map.getWidth()-1, map.getHeight()-1);
    var player = map.getPlayer();

    map.defineObject('robot', {
        'type': 'dynamic',
        'symbol': 'R',
        'color': 'gray',
        'onCollision': function (player, me) {
            me.giveItemTo(player, 'blueKey');
        },
        'behavior': function (me) {
#BEGIN_EDITABLE#
            // 随机移动
            var moves = map.getAdjacentEmptyCells(me.getX(), me.getY());
            // getAdjacentEmptyCells 可以提供一个 ((x, y), direction) 格式的数组
            me.move(moves[map.getRandomInt(0, moves.length - 1)][1]);













































#END_EDITABLE#
        }
    });

    map.defineObject('barrier', {
        'symbol': '░',
        'color': 'purple',
        'impassable': true,
        'passableFor': ['robot']
    });

    map.placeObject(0, map.getHeight() - 1, 'exit');
    map.placeObject(1, 1, 'robot');
    map.placeObject(map.getWidth() - 2, 8, 'blueKey');
    map.placeObject(map.getWidth() - 2, 9, 'barrier');

    var autoGeneratedMaze = new ROT.Map.DividedMaze(map.getWidth(), 10);
    autoGeneratedMaze.create( function (x, y, mapValue) {
        // 别试图欺骗机器人或者识别区
        if ((x == 1 && y == 1) || (x == map.getWidth() - 2 && y >= 8)) {
            return 0;
        } else if (mapValue === 1) { //0 是空的，1 是墙
            map.placeObject(x,y, 'block');
        } else {
            map.placeObject(x,y,'empty');
        }
    });
#END_OF_START_LEVEL#
}

function validateLevel(map) {
    map.validateExactlyXManyObjects(1, 'exit');
    map.validateExactlyXManyObjects(1, 'robot');
    map.validateAtMostXObjects(1, 'blueKey');
}

function onExit(map) {
    if (!map.getPlayer().hasItem('blueKey')) {
        map.writeStatus("我们必须拿到这把钥匙！");
        return false;
    } else {
        return true;
    }
}
